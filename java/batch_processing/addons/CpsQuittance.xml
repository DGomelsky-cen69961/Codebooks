<?xml version="1.0" encoding="UTF-8"?>
<!--
#================================================================================
# Name         : CpsQuittance.xml
# Version      : 1.1
# Author       : 
# Date         : 28.01.2022
# Description  : definice extractu pro SmartCase 
# Notes        : extrakt pro generovani notifikací 3044 - Functional unit quittance to be prepared (generated by EoD job CpsQuittance)
#================================================================================
# Modified     :
# init   date   mod id                  description
#      ddmmmyy
# PKU  01Jan22         CD-32974: Úprava požadavku Kontaktování klienta s nabídkou služby el. zasílané kvitance (MNT) = změna limitní hodnoty pro genrování notifikací z 60 na 30 dnů
# PKU  24Feb22         CD-32974: Změna v candidates_no_ntf = nastavení limitu na kontrolu již generované ntf 3044 na 60 dnů, aby nedocházelo k dulicitnímu generování po změně z 60 na 30
# 
#================================================================================
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <import resource="classpath:addons-context.xml" />

    <import resource="classpath:addons-exports-parents.xml" />

	<bean id="propertyPlaceholderConfigurer" class="cz.csas.colmanbatch.springutil.WebDpCompatPropertyPlaceholderConfigurer" lazy-init="false">
		<property name="locations">
			<list>
				<value>classpath:batch.properties</value>
                <value>classpath:application.properties</value>
			</list>
		</property>
	</bean>

	<batch:job id="CpsQuittance">
    	<batch:decision id="decision" decider="parentDecider">
			<batch:end on="END" />
			<batch:fail on="FAILED" />
			<batch:next on="DEFAULT_START" to="step1" />
												
			<batch:next on="START:step1" to="step1" /> 
			<batch:next on="COMPLETED:step1" to="step2" />			

			<batch:next on="START:step2" to="step2" /> 
			<batch:next on="COMPLETED:step2" to="step3" />			
			
			<batch:next on="START:step3" to="step3" /> 
			<batch:next on="COMPLETED:step3" to="step4" />			

		    <batch:next on="START:step4" to="step4" /> 
			<batch:next on="COMPLETED:step4" to="step5" />			
			
			<batch:next on="START:step5" to="step5" /> 
			<batch:end on="COMPLETED:step5" />			

    	</batch:decision>	

		<batch:step id="step1" next="decision">
			<batch:tasklet ref="step1Task" />
		</batch:step>
		
		<batch:step id="step2" next="decision">
			<batch:tasklet ref="step2Task" />
		</batch:step>

        <batch:step id="step3" next="decision">
            <batch:tasklet ref="step3Task" />
        </batch:step>
		
		<batch:step id="step4" next="decision">
            <batch:tasklet ref="step4Task" />
        </batch:step>
		
		<batch:step id="step5" next="decision">
            <batch:tasklet ref="step5Task" />
        </batch:step>
		
    </batch:job>		
			
	<bean id="step1Task" class="cz.csas.colmanbatch.task.StoredProcedureTask" scope="step">
		<property name="sql">
			<value>
<![CDATA[
begin
INSERT INTO CMS_TASK_NOTIFICATION (
ID, 
CREATE_TIME, 
CREATE_USER, 
IS_DELETED, 
LAST_TIME, 
LAST_TRANSITION, 
LAST_USER, 
STATE, 
BUSINESS_ENTITY_DESCRIPTOR_ID, 
DYNAMIC_XML, 
PROCESSING_FLAGS, 
COMPLETION_DATE, 
DESCRIPTION, 
PROCESSING_TYPE, 
REACTION_ID, 
SUBJECT, 
ASSET_ID, 
CLIENT_ID, 
COLLATERAL_ID, 
INITIATOR_ID, 
INSURANCE_ID, 
LOAN_ID, 
SEGMENT, 
EVENT_ID, 
EXTRA_FIELD_1, 
TASK_ID, 
WD_SUBJECT_ID, 
NEXT_REV_DATE 
)
with candidates as (select
distinct 
p.id p_id,
l.id l_id, 
a.id a_id,
p.client_category p_client_category,
p.BUSINESS_ENTITY_DESCRIPTOR_ID p_BUS_ENTITY_DESCRIPTOR_ID
from
cms_collateral_asset a
join cms_functional_unit fu on fu.id = a.id
join cms_collateral c on c.collateral_asset_id = a.id
join cms_loan_collateral_link li on li.collateral_id = c.id
join cms_basic_loan l on l.id = li.loan_id
join cms_partner_role pr on pr.id = l.main_debtor_id
join cms_partner p on p.id = pr.partner_id
join CMS_FSCS_Client_Rating fs on fs.partner_id = p.id
where 1=1
and l.state ='active'
and l.type not in (
'41000','41001','41002','41003','41011','41012','41013','41014','41015','41016','41017','41022','41023','41024','41025','41026','41027','41028','41029','41030','41031','41033','41034','41035','41036','41037','41038','41039','41040','41043','41044','41045','41046','41047','41050','41051','41053','41054','41057','41058','41059','41060','41061','41064','41065','41066','41069','41100','41101','41102','41103','41104','41105','41110','41111','41112','41113','41114','41115','41116','41117','41122','41123','41124','41125','41126','41127','41128','41129','41130','41131','41133','41134','41135','41136','41137','41138','41139','41140','41143','41144','41145','41146','41147','41150','41151','41153','41154','41157','41158','41159','41160','41161','41164','41165','41166','41169','41200','41201','41202','41203','41204','41205','41206','41207','41208','41209','41210','41211','41212','41213','41214','41215','41216','41217','41222','41223','41224','41225','41226','41227','41228','41229','41230','41231','41233','41234','41235','41236','41237','41238','41239','41240','41243','41244','41245','41246','41247','41250','41251','41253','41254','41257','41258','41259','41260','41261','41264','41265','41266','41269'
)
and c.state = 'activated'
and l.SOURCE_SYSTEM_ID = 'SB'
and l.maturity_date is not null
and l.maturity_date > sysdate + 25  ---původně 55---
and l.maturity_Date < sysdate + 30  ---původně 60---
and l.BUSINESS_ENTITY_DESCRIPTOR_ID != 'cscollateral/Overdraft'
and not regexp_like(fs.CLIENT_RATING, '^R')
and p.client_Category in ('RETAIL', 'MSE')
-- theree is not another loan connected to the asset which is not going to mature...
and not exists (select 1 from 
 cms_collateral inc 
 join cms_loan_collateral_link inli on inli.collateral_id = inc.id
 join cms_basic_loan inl on inl.id = inli.loan_id
 where 1=1
 and inc.collateral_asset_id = a.id
 and inl.state ='active'
 and inc.state = 'activated'
 and (inl.maturity_date is null or  inl.maturity_Date > sysdate + 30) ---původně 60---
) 
), -- end candidates
candidates_no_ntf as (select 
p_id p_id,
l_id l_id, 
a_id a_id,
p_client_category p_client_category,
p_BUS_ENTITY_DESCRIPTOR_ID p_BUS_ENTITY_DESCRIPTOR_ID
from candidates
where 1=1
and not exists (
 select 1 from cms_task_notification int 
 where 1=1
 and int.event_id = '3044'
 and int.create_time > sysdate - 60
 and (int.LOAN_ID = candidates.l_id or int.ASSET_ID = candidates.a_id
 )
)
) -- end candidates_no_ntf
, urad as (
select 
p_id p_id,
l_id l_id, 
a_id a_id,
p_client_category p_client_category, 
regexp_replace(elsite.description, '(CBCOL_CadastreDistrict:)([0-9]+)', '\2') tentourad
from candidates_no_ntf cn
join cms_collateral_asset a on a.id = cn.a_id
join CMS_MIGRATED_PROPERTY_CERT pc on pc.functional_unit_id = a.id
join wdp_code_element el on el.id = 'cscollateral/CBCOL_CadastreTerritory/' || pc.CADASTRE_TERRITORY
join wdp_code_element elsite on elsite.id = 'cscollateral/CBCOL_CadastreSite/' || regexp_replace(el.description, '(CBCOL_CadastreCity:[0-9]{6}, CBCOL_CadastreSite:)([0-9]{3})(.*)', '\2') 
where 1=1
and not exists (select 1 from cms_property_certificate inpc where inpc.functional_unit_id = a.id)
union
select 
p_id p_id,
l_id l_id, 
a_id a_id,
p_client_category p_client_category, 
regexp_replace(elsite.description, '(CBCOL_CadastreDistrict:)([0-9]+)', '\2')tentourad
from candidates_no_ntf cn
join cms_collateral_asset a on a.id = cn.a_id
join cms_property_certificate pc on pc.functional_unit_id = a.id
join wdp_code_element el on el.id = 'cscollateral/CBCOL_CadastreTerritory/' || pc.CADASTRE_TERRITORY
join wdp_code_element elsite on elsite.id = 'cscollateral/CBCOL_CadastreSite/' || regexp_replace(el.description, '(CBCOL_CadastreCity:[0-9]{6}, CBCOL_CadastreSite:)([0-9]{3})(.*)', '\2') 
where 1=1
) -- end urad
, pocty as (
select
p_id p_id,
count(*) pocet_uradu_pripad
from urad
group by 
p_id
) -- end pocty
select
COLMANDATA.HIBERNATE_SEQUENCE.nextval * 10 + 1 ID,
sysdate CREATE_TIME,
'KVITANCE' CREATE_USER,
NULL IS_DELETED,
sysdate LAST_TIME,
'create' LAST_TRANSITION,
'KVITANCE' LAST_USER,
'CREATED' STATE,
'cscollateral/CPSTaskNotification' BUSINESS_ENTITY_DESCRIPTOR_ID,
'<map/>' DYNAMIC_XML,
null PROCESSING_FLAGS,
null COMPLETION_DATE,
'Blíží se konec platnosti produktů, zvažte možnost využití služby elektronického zaslání kvitance na KN; počet kat. úřadů:' || poc.pocet_uradu_pripad DESCRIPTION,
'CPS' PROCESSING_TYPE,
1 REACTION_ID,
NULL SUBJECT,
cn.a_id ASSET_ID,
cn.p_id CLIENT_ID,
null COLLATERAL_ID,
null INITIATOR_ID,
null INSURANCE_ID,
cn.l_id LOAN_ID,
case when (cn.p_client_category = 'MSE' OR (cn.p_client_category = 'RETAIL' AND CN.p_BUS_ENTITY_DESCRIPTOR_ID = 'cscollateral/Organization')) then 'MSE'
when exists (select 1 from cms_basic_loan inl join candidates_no_ntf incn on incn.l_id = inl.id where 1=1 and incn.p_id = cn.p_id and inl.type = '45253') then 'MSE'
else 'RETAIL'
END
SEGMENT,
'3044' EVENT_ID,
null EXTRA_FIELD_1,
null TASK_ID,
null WD_SUBJECT_ID,
null NEXT_REV_DATE 
from
candidates_no_ntf cn
join pocty poc on poc.p_id = cn.p_id;
end;
]]>			
			</value>
		</property>
	</bean>	

	<bean id="step2Task" class="cz.csas.colmanbatch.task.StoredProcedureTask" scope="step">
		<property name="sql">
			<value>
<![CDATA[
begin
update cms_task_notification
set LAST_TRANSITION = 'create',
state = 'NotSent' 
where id in (
select id from 
(select
tn.id id ,
row_number() over (partition by tn.client_id order by case when l.type = '45253' then 1 else 2 end, tn.loan_id desc) cislo_radku
from
cms_task_notification tn
join cms_partner p on p.id = tn.client_id
join cms_basic_loan l on l.id = tn.loan_id
where 1=1
and tn.create_user = 'KVITANCE'
and tn.event_id = '3044'
and tn.state = 'CREATED'
and tn.LAST_TRANSITION = 'create'
) x
where x.cislo_radku>1
)
;
end;
]]>				
			</value>
		</property>
	</bean>	

	<bean id="step3Task" class="cz.csas.colmanbatch.task.StoredProcedureTask" scope="step">
		<property name="sql">
			<value>
<![CDATA[
begin
insert into CMS_CPS_TASK_NOTIF
(
ID, 
REQUEST_TYPE, 
SOURCE_SYSTEM, 
NOTIFICATION_XML, 
MAIN_DEPTOR_CLUID 
)
select
tn.id ID, 
case when tn.SEGMENT = 'RETAIL' then 'COLM_NNV_OFFER_MNT' else 'COLM_NNV_OFFER_MSE' end REQUEST_TYPE, 
'COLMAN' SOURCE_SYSTEM, 
'<tns:requirement xmlns:tns="http://schemas.csas.cz/cps/imports/collateral/v1">' || chr(13) || chr(10) ||
'    <tns:reqType>' ||
case when tn.segment = 'RETAIL' then 'COLM_NNV_OFFER_MNT' else 'COLM_NNV_OFFER_MSE' end  ||
'</tns:reqType>' || chr(13) || chr(10) ||
'    <tns:sourceSystem>COLMAN</tns:sourceSystem>' || chr(13) || chr(10) ||
'    <tns:mainLoanProduct>' || chr(13) || chr(10) ||
'        <tns:evidenceNumber>' ||
l.loan_number ||
'</tns:evidenceNumber>' || chr(13) || chr(10) ||
'        <tns:sourceSystem>SB</tns:sourceSystem>' || chr(13) || chr(10) ||
'        <tns:mainDebtor>' || chr(13) || chr(10) ||
'            <tns:cluid>' ||
p.cluid ||
'</tns:cluid>' || chr(13) || chr(10) ||
'            <tns:partyType>' || 
case when p.business_entity_descriptor_id = 'cscollateral/Person' then 'F' when p.business_entity_descriptor_id = 'cscollateral/Organization' then 'P' end ||
'</tns:partyType>' || chr(13) || chr(10) ||
case when y.username is not null then
'            <tns:primaryServiceUser>' ||
y.username ||
'</tns:primaryServiceUser>' || chr(13) || chr(10)
else '' end ||
'            <tns:clientCategory>' ||
p.client_category ||
'</tns:clientCategory>' || chr(13) || chr(10) ||
'        </tns:mainDebtor>' || chr(13) || chr(10) ||
'    </tns:mainLoanProduct>' || chr(13) || chr(10) ||
case when exists (select 1 from cms_task_notification intn
 where 1=1
 and intn.create_user = 'KVITANCE'
 and intn.event_id = '3044'
 and intn.state = 'NotSent'
 and intn.LAST_TRANSITION = 'create'
 and intn.client_id = tn.client_id
 and intn.loan_id != tn.loan_id) then 
 '    <tns:otherLoanProducts>' || chr(13) || chr(10) ||
 (
  select
  listagg(
   '        <tns:otherLoanProduct>' || chr(13) || chr(10) ||
   '            <tns:evidenceNumber>' || inl_loan_number || '</tns:evidenceNumber>' || chr(13) || chr(10) ||
   '            <tns:sourceSystem>SB</tns:sourceSystem>' || chr(13) || chr(10) ||
   '            <tns:mainDebtor>' || chr(13) || chr(10) ||
   '                <tns:cluid>' || inp_cluid || '</tns:cluid>' || chr(13) || chr(10) ||
   '            </tns:mainDebtor>' || chr(13) || chr(10) ||
   '        </tns:otherLoanProduct>', chr(13) || chr(10)) within group (order by inl_loan_number) 
  from 
  (
  select
  distinct
  inl.loan_number inl_loan_number,
  inp.cluid inp_cluid
  from
  cms_task_notification intn
  join cms_basic_loan inl on inl.id = intn.loan_id
  join cms_partner_role inpr on inpr.id = inl.main_debtor_id
  join cms_partner inp on inp.id = inpr.partner_id
  where 1=1
  and intn.create_user = 'KVITANCE'
  and intn.event_id = '3044'
  and intn.state = 'NotSent'
  and intn.LAST_TRANSITION = 'create'
  and intn.client_id = tn.client_id
  and intn.loan_id != tn.loan_id
  ) where 1=1
 ) || chr(13) || chr(10) ||
 '    </tns:otherLoanProducts>' || chr(13) || chr(10)
else '' end ||

'    <tns:collaterals>' || chr(13) || chr(10) ||
(
 select
 listagg(
 '        <tns:collateral>' || chr(13) || chr(10) ||
 '            <tns:collateral_id>' || inc.collateral_id  || '</tns:collateral_id>' || chr(13) || chr(10) ||
 '            <tns:collateralCode>' || st.collateral_code || '</tns:collateralCode>' || chr(13) || chr(10) ||
 '            <tns:collateralForm>' || st.collateral_form || '</tns:collateralForm>' || chr(13) || chr(10) ||
 '        </tns:collateral>', chr(13) || chr(10) ) within group (order by inc.id) 
 from
 cms_collateral inc 
 where 1=1
 and inc.collateral_asset_id = a.id
 and inc.state  = 'activated'
)  || chr(13) || chr(10) ||
'    </tns:collaterals>' || chr(13) || chr(10) ||
'    <tns:collateralAsset>' || chr(13) || chr(10) ||
'        <tns:collateralCode>'  ||
st.collateral_code ||
'</tns:collateralCode>' || chr(13) || chr(10) ||
'        <tns:collateralForm>' ||
st.COLLATERAL_FORM ||
'</tns:collateralForm>' ||  chr(13) || chr(10) ||
'        <tns:collateralAsset_id>' ||
a.asset_id || 
'</tns:collateralAsset_id>' || chr(13) || chr(10) ||
'    </tns:collateralAsset>' || chr(13) || chr(10) ||
'</tns:requirement>'
NOTIFICATION_XML, 
p.cluid MAIN_DEPTOR_CLUID 
from
cms_task_notification tn
join cms_partner p on p.id = tn.client_id
join cms_basic_loan l on l.id = tn.loan_id
join cms_collateral_asset a on a.id = tn.asset_id
join cms_coll_subtype_settings st on st.id = a.COLLATERAL_TYPE_SETTINGS_ID
left join (
select
ipr.id ipr_id,
username username,
row_number() over (partition by ipr.id order by username, ipos.id desc) dup
from cms_partner ipr
join CMS_CLIENT_SERVICING ics on ics.PARTNER_ID = ipr.id
join CMS_CRM_Position ipos on ipos.CLIENT_SERVICING_ID = ics.id
join CMS_CS_EMPLOYEE iemp on iemp.POSITION_ID = ipos.id
where 1=1
and iemp.PRIMARY = 1
and iemp.username is not null
) y on y.ipr_id = p.id and y.dup = 1
where 1=1
and tn.create_user = 'KVITANCE'
and tn.event_id = '3044'
and tn.state = 'CREATED'
and tn.LAST_TRANSITION = 'create'
and not exists (select 1 from CMS_CPS_TASK_NOTIF intn where intn.id = tn.id)
;
end;
]]>				
			</value>
		</property>
	</bean>	
	
	<bean id="step4Task" class="cz.csas.colmanbatch.task.StoredProcedureTask" scope="step">
		<property name="sql">
			<value>
<![CDATA[
begin
insert into CMS_CPS_TASK_NOTIF
(
ID, 
REQUEST_TYPE, 
SOURCE_SYSTEM, 
NOTIFICATION_XML, 
MAIN_DEPTOR_CLUID 
)
select
notSentTN.id ID, 
tncps.REQUEST_TYPE, 
tncps.SOURCE_SYSTEM, 
tncps.NOTIFICATION_XML, 
tncps.MAIN_DEPTOR_CLUID 
from
cms_task_notification notSentTN
JOIN cms_task_notification tn on tn.client_id = notSentTN.client_id 
join CMS_CPS_TASK_NOTIF tncps on tncps.id = tn.id
where 1=1
and tn.create_user = 'KVITANCE'
and tn.event_id = '3044'
and tn.state = 'CREATED'
and tn.LAST_TRANSITION = 'create'
and notSentTN.create_user = 'KVITANCE'
and notSentTN.event_id = '3044'
and notSentTN.state = 'NotSent'
and notSentTN.LAST_TRANSITION = 'create'
and not exists (select 1 from CMS_CPS_TASK_NOTIF intn where intn.id = notSentTN.id)
;
end;
]]>					
			</value>
		</property>
	</bean>	
	
	<bean id="step5Task" class="cz.csas.colmanbatch.task.StoredProcedureTask" scope="step">
		<property name="sql">
			<value>
<![CDATA[
begin
UPDATE CMS_TASK_NOTIFICATION notSentTN
SET 
last_time = sysdate,
notSentTN.LAST_TRANSITION = 'NoSend'
WHERE 1=1
and notSentTN.create_user = 'KVITANCE'
and notSentTN.event_id = '3044'
and notSentTN.state = 'NotSent'
and notSentTN.LAST_TRANSITION = 'create'
;
end;
]]>					
			</value>
		</property>
	</bean>		
	
</beans>

